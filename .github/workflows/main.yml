name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  qemu-ppc64le-builds:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - registry.fedoraproject.org/fedora:rawhide
          - registry.fedoraproject.org/fedora:latest
          - docker.io/alpine:latest
        cc: [gcc, clang]
        arch: [ppc64le]
    steps:
    - uses: actions/checkout@v3
    - name: Register problem matchers
      run: |
        echo "::add-matcher::.github/problem-matchers/compiler-source.json"
    - name: Install tools
      run: |
        sudo apt-get install -y qemu-user-static
    - name: Build and test
      run: |
        set -eux
        tools/build-with --distro=${{ matrix.image }} --cc=${{ matrix.cc }} --emulate=${{ matrix.arch }}

  native-builds:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        image:
          - registry.fedoraproject.org/fedora:rawhide
          - registry.fedoraproject.org/fedora:latest
        cc: [gcc, clang]
    steps:
    - uses: actions/checkout@v3
    - name: Register problem matchers
      run: |
        echo "::add-matcher::.github/problem-matchers/compiler-source.json"
    - name: Build and test
      run: |
        set -eux
        tools/build-with --distro=${{ matrix.image }} --cc=${{ matrix.cc }}

  cross-builds:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: ppc64le
            cc_cmd: powerpc64le-linux-gnu-gcc
            cc_pkg: gcc-powerpc64le-linux-gnu
            libc_pkg: libc6-dev-ppc64el-cross
          - name: ppc64
            cc_cmd: powerpc64-linux-gnu-gcc
            cc_pkg: gcc-powerpc64-linux-gnu
            libc_pkg: libc6-dev-ppc64-cross
          - name: ppc32
            cc_cmd: powerpc-linux-gnu-gcc
            cc_pkg: gcc-powerpc-linux-gnu
            libc_pkg: libc6-dev-powerpc-cross
        image:
          - docker.io/debian:unstable
          - docker.io/debian:testing
          - docker.io/debian:stable
    steps:
    - uses: actions/checkout@v3
    - name: Register problem matchers
      run: |
        echo "::add-matcher::.github/problem-matchers/compiler-source.json"
    - name: Build and test
      run: |
        set -eux
        tools/build-with --distro=${{ matrix.image }} --cc=${{ matrix.build.cc_cmd }} --install ${{ matrix.build.cc_pkg }} --install ${{ matrix.build.libc_pkg }}
